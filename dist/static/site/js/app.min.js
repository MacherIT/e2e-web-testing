"use strict";angular.module("MainApp",["ngRoute","ngTouch","HomeModule","AuthModule"]).controller("mainController",["$location","$rootScope","$window","auth",function(e,o,t,n){o.isMobile=t.innerWidth<=768,angular.element(t).bind("resize",function(){o.isMobile=t.innerWidth<=768,o.$$phase||o.$apply()}),o.$on("$routeChangeSuccess",function(){var t="";e.$$path.split("/").map(function(e){""!==e&&(t+="-"+e)}),o.bodyClass=""!==t?"page"+t:"page-home"})}]).filter("precio",function(){return function(e){return e?parseFloat(e).toFixed(2):""}}).filter("encodeurl",function(){return function(e){return e?window.encodeURIComponent(e):""}}).filter("removeTrailingSlash",function(){return function(e){return e?"/"===e[0]?e.slice(1):e:""}}),angular.module("MainApp").config(["$routeProvider","$locationProvider",function(e,t){t.hashPrefix(""),e.when("/",{templateUrl:"/views/home/index.html",controller:"home.index"}).when("/carrito",{templateUrl:"/views/carrito/index.html",controller:"carrito.index"}).when("/productos",{templateUrl:"/views/productos/index.html",controller:"productos.index"}).when("/productos/:id",{templateUrl:"/views/productos/show.html",controller:"productos.show"}).when("/login",{templateUrl:"/views/auth/login.html",controller:"auth.login"}).when("/logout",{templateUrl:"views/home/index.html",resolve:{secureAccess:["auth","$window",function(e,t){e.isLoggedIn()||(t.location.href="#/",t.location.reload())}]},controller:"auth.logout"}).otherwise({templateUrl:"/views/home/index.html",redirectTo:"/"})}]),angular.module("MainApp").directive("mainMenu",function(){return{restrict:"E",templateUrl:"/views/general/main-menu.html",controller:"general.main-menu"}}).directive("footerSection",function(){return{restrict:"E",templateUrl:"/views/general/footer-section.html",controller:"general.footer"}}).directive("slideNext",function(){return{restrict:"A",link:function(e,t,o){$(t).on("click",function(){o.hideAll&&$(o.hideAll).slideUp(),$(t).next().stop().slideDown()})}}}).directive("loadFrame",function(){return{restrict:"A",link:function(e,t,o){$("document").ready(function(){$(t).attr("src",o.source)})}}}).directive("scrollRight",function(){return{restrict:"A",link:function(e,t,o){$(t).on("click",function(){$(o.target).animate({scrollLeft:"+="+$(o.target).width()},parseInt(o.time))})}}}).directive("scrollLeft",function(){return{restrict:"A",link:function(e,t,o){$(t).on("click",function(){$(o.target).animate({scrollLeft:"-="+$(o.target).width()},parseInt(o.time))})}}}).directive("scrollToContacto",function(){return{restrict:"A",link:function(e,t,o){$(t).on("click",function(){$("body, html").animate({scrollTop:$("footer-section").offset().top},500)})}}}).directive("scrollToTarget",function(){return{restrict:"A",link:function(e,t,o){$(t).on("click",function(){$("body, html").animate({scrollTop:$(o.target).offset().top},700)})}}}).directive("escondeMenu",function(){return{restrict:"A",link:function(e,t,o){$(t).on("click",function(){$("#navbar").collapse("hide")})}}}).directive("flotante",function(){return{restrict:"A",link:function(e,t,o){$(window).on("scroll",function(e){50<$(window).scrollTop()?$(window).width()<=992&&$(t).addClass("flotante"):$(t).removeClass("flotante")})}}}),angular.module("AuthModule",[]),angular.module("HomeModule",[]).controller("home.index",["$scope","$http",function(o,e){e.get("/assets/data/home/home.json").then(function(e){var t=e.data;o.cabecera=t.cabecera,o.leyendoTuMente=t.leyendoTuMente,o.imagenEmpresa=t.imagenEmpresa,o.equipoMarketing=t.equipoMarketing,o.featuresApp=t.featuresApp,o.beneficios=t.beneficios,o.ahorro=t.ahorro,o.equipoAnt=t.equipoAnt,o.featuresItemActivo=o.featuresApp.items[0],o.equipoItemActivo=o.equipoAnt.items[0]},function(e){console.error(e)}),o.setFeaturesItemActivo=function(e){o.featuresItemActivo=e},o.setEquipoItemActivo=function(e){o.equipoItemActivo=e}}]),angular.module("HomeModule").directive("fadeInOnScroll",function(){return{restrict:"A",link:function(e,t,o){$(window).on("scroll",function(e){$(window).scrollTop()+.5*window.innerHeight>=$(t).offset().top&&0==$(t).find(".cuerpo").css("opacity")&&$(t).find(".cuerpo").addClass("fadeIn")})}}}).directive("cabecera",function(){return{restrict:"E",templateUrl:"/views/home/cabecera.html"}}).directive("leyendoTuMente",function(){return{restrict:"E",templateUrl:"/views/home/leyendo-tu-mente.html"}}).directive("imagenEmpresa",function(){return{restrict:"E",templateUrl:"/views/home/imagen-empresa.html"}}).directive("equipoMarketing",function(){return{restrict:"E",templateUrl:"/views/home/equipo-marketing.html"}}).directive("featuresApp",function(){return{restrict:"E",templateUrl:"/views/home/features-app.html"}}).directive("beneficios",function(){return{restrict:"E",templateUrl:"/views/home/beneficios.html"}}).directive("ahorro",function(){return{restrict:"E",templateUrl:"/views/home/ahorro.html"}}).directive("equipoAnt",function(){return{restrict:"E",templateUrl:"/views/home/equipo-ant.html"}}),angular.module("MainApp").factory("auth",["$http","$window",function(t,o){var n=function(){return o.localStorage["ant-token"]},e={headers:{Authorization:"Bearer "+n()}},r=function(e){o.localStorage["ant-token"]=e};return{saveToken:function(e){return r(e)},getToken:function(){return n()},secureKey:e,isLoggedIn:function(){var e=n(),t=void 0;return!!e&&(t=e.split(".")[1],t=o.atob(t),(t=JSON.parse(t)).exp>Date.now()/1e3)},currentUser:function(){if(isLoggedIn()){var e=n().split(".")[1];return e=o.atob(e),{email:(e=JSON.parse(e)).email,name:e.name}}},login:function(e){return t.post("/api/usuarios/login",e).then(function(e){return r(e.data.token),e},function(e){return e})},logout:function(){o.localStorage.removeItem("ant-token")}}}]),angular.module("MainApp").factory("getApiData",["$http","$rootScope",function(e,t){return{}}]),angular.module("MainApp").factory("storage",["$window","$rootScope",function(e,t){return{}}]),angular.module("AuthModule").controller("auth.login",["$scope","$window","auth",function(t,o,e){e.isLoggedIn()?(o.location.href="#/",o.location.reload()):(t.email="",t.password="",t.failLogin=!1,t.sendForm=function(){e.login({email:t.email,password:t.password}).then(function(e){401===e.status?t.failLogin=!0:(o.location.href="#/",o.location.reload())})})}]).controller("auth.logout",["$scope","$window","auth",function(e,t,o){o.logout(),t.location.href="#/",t.location.reload()}]),angular.module("MainApp").controller("general.main-menu",function(){}).controller("general.footer",["$scope","$http",function(t,e){t.sent=!1,t.formcontacto={nombre:"",telefono:"",email:"",consulta:"",solicitado:!1},t.formcontacto.enviar=function(){t.sent=!0,e.post("api/mailing/contacto",{nombre:t.formcontacto.nombre,telefono:t.formcontacto.telefono,email:t.formcontacto.email,consulta:t.formcontacto.consulta}).then(function(e){t.sent=!1,t.formcontacto.solicitado=!0,t.formcontacto.envioCorrecto=!0},function(e){t.sent=!1,t.formcontacto.solicitado=!0,t.formcontacto.envioCorrecto=!1,console.error(e)})}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
