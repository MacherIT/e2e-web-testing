"use strict";angular.module("MainApp",["ngRoute","ngTouch","HomeModule","AuthModule"]).controller("mainController",["$location","$rootScope","$window","auth",function(o,e,t,n){e.isMobile=t.innerWidth<=768,angular.element(t).bind("resize",function(){e.isMobile=t.innerWidth<=768,e.$$phase||e.$apply()}),e.$on("$routeChangeSuccess",function(){var t="";o.$$path.split("/").map(function(o){""!==o&&(t+="-"+o)}),e.bodyClass=""!==t?"page"+t:"page-home"})}]).filter("precio",function(){return function(o){return o?parseFloat(o).toFixed(2):""}}).filter("encodeurl",function(){return function(o){return o?window.encodeURIComponent(o):""}}).filter("removeTrailingSlash",function(){return function(o){return o?"/"===o[0]?o.slice(1):o:""}}),angular.module("MainApp").config(["$routeProvider","$locationProvider",function(o,t){t.hashPrefix(""),o.when("/",{templateUrl:"/views/home/index.html",controller:"home.index"}).when("/carrito",{templateUrl:"/views/carrito/index.html",controller:"carrito.index"}).when("/productos",{templateUrl:"/views/productos/index.html",controller:"productos.index"}).when("/productos/:id",{templateUrl:"/views/productos/show.html",controller:"productos.show"}).when("/login",{templateUrl:"/views/auth/login.html",controller:"auth.login"}).when("/logout",{templateUrl:"views/home/index.html",resolve:{secureAccess:["auth","$window",function(o,t){o.isLoggedIn()||(t.location.href="#/",t.location.reload())}]},controller:"auth.logout"}).otherwise({templateUrl:"/views/home/index.html",redirectTo:"/"})}]),angular.module("MainApp").directive("mainMenu",function(){return{restrict:"E",templateUrl:"/views/general/main-menu.html",controller:"general.main-menu"}}).directive("footerSection",function(){return{restrict:"E",templateUrl:"/views/general/footer-section.html",controller:"general.footer"}}).directive("loadFrame",function(){return{restrict:"A",link:function(o,t,e){$("document").ready(function(){$(t).attr("src",e.source)})}}}).directive("scrollRight",function(){return{restrict:"A",link:function(o,t,e){$(t).on("click",function(){$(e.target).animate({scrollLeft:"+="+$(e.target).width()},parseInt(e.time))})}}}).directive("scrollLeft",function(){return{restrict:"A",link:function(o,t,e){$(t).on("click",function(){$(e.target).animate({scrollLeft:"-="+$(e.target).width()},parseInt(e.time))})}}}).directive("scrollToContacto",function(){return{restrict:"A",link:function(o,t,e){$(t).on("click",function(){$("body, html").animate({scrollTop:$("footer-section").offset().top},500)})}}}).directive("scrollToTarget",function(){return{restrict:"A",link:function(o,t,e){$(t).on("click",function(){$("body, html").animate({scrollTop:$(e.target).offset().top},700)})}}}).directive("escondeMenu",function(){return{restrict:"A",link:function(o,t,e){$(t).on("click",function(){$("#navbar").collapse("hide")})}}}).directive("flotante",function(){return{restrict:"A",link:function(o,t,e){$(window).on("scroll",function(o){50<$(window).scrollTop()?$(window).width()<=992&&$(t).addClass("flotante"):$(t).removeClass("flotante")})}}}),angular.module("AuthModule",[]),angular.module("HomeModule",[]).controller("home.index",["$scope","$http",function(t,o){t.newsletters={email:"",solicitado:!1},t.newsletters.enviar=function(){o.post("api/mailing/newsletters",{email:t.newsletters.email}).then(function(o){t.newsletters.solicitado=!0,t.newsletters.envioCorrecto=!0,console.log(o)},function(o){t.newsletters.solicitado=!0,t.newsletters.envioCorrecto=!1,console.error(o)})}}]),angular.module("HomeModule").directive("newsletters",function(){return{restrict:"E",templateUrl:"/views/home/newsletters.html"}}),angular.module("MainApp").factory("auth",["$http","$window",function(t,e){var n=function(){return e.localStorage["ant-token"]},o={headers:{Authorization:"Bearer "+n()}},r=function(o){e.localStorage["ant-token"]=o};return{saveToken:function(o){return r(o)},getToken:function(){return n()},secureKey:o,isLoggedIn:function(){var o=n(),t=void 0;return!!o&&(t=o.split(".")[1],t=e.atob(t),(t=JSON.parse(t)).exp>Date.now()/1e3)},currentUser:function(){if(isLoggedIn()){var o=n().split(".")[1];return o=e.atob(o),{email:(o=JSON.parse(o)).email,name:o.name}}},login:function(o){return t.post("/api/usuarios/login",o).then(function(o){return r(o.data.token),o},function(o){return o})},logout:function(){e.localStorage.removeItem("ant-token")}}}]),angular.module("MainApp").factory("getApiData",["$http","$rootScope",function(o,t){return{}}]),angular.module("MainApp").factory("storage",["$window","$rootScope",function(o,t){return{}}]),angular.module("AuthModule").controller("auth.login",["$scope","$window","auth",function(t,e,o){o.isLoggedIn()?(e.location.href="#/",e.location.reload()):(t.email="",t.password="",t.failLogin=!1,t.sendForm=function(){o.login({email:t.email,password:t.password}).then(function(o){401===o.status?t.failLogin=!0:(e.location.href="#/",e.location.reload())})})}]).controller("auth.logout",["$scope","$window","auth",function(o,t,e){e.logout(),t.location.href="#/",t.location.reload()}]),angular.module("MainApp").controller("general.main-menu",function(){}).controller("general.footer",["$scope","$http",function(t,o){t.sent=!1,t.formcontacto={nombre:"",telefono:"",email:"",consulta:"",solicitado:!1},t.formcontacto.enviar=function(){t.sent=!0,o.post("api/mailing/contacto",{nombre:t.formcontacto.nombre,telefono:t.formcontacto.telefono,email:t.formcontacto.email,consulta:t.formcontacto.consulta}).then(function(o){t.sent=!1,t.formcontacto.solicitado=!0,t.formcontacto.envioCorrecto=!0},function(o){t.sent=!1,t.formcontacto.solicitado=!0,t.formcontacto.envioCorrecto=!1,console.error(o)})}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXRpYy9zaXRlL2pzL2FwcC5taW4uanMiLCJtYWluLmpzIiwicm91dGVzLmpzIiwiZGlyZWN0aXZlcy9tYWluLmpzIiwiY29udHJvbGxlcnMvYXV0aC9pbmRleC5qcyIsImNvbnRyb2xsZXJzL2hvbWUvaW5kZXguanMiLCJkaXJlY3RpdmVzL2hvbWUvZGlyZWN0aXZlcy5qcyIsInNlcnZpY2VzL19hdXRoLmpzIiwic2VydmljZXMvX2dldC1hcGktZGF0YS5qcyIsInNlcnZpY2VzL19zdG9yYWdlLmpzIiwiY29udHJvbGxlcnMvYXV0aC9fbG9naW4uanMiLCJjb250cm9sbGVycy9nZW5lcmFsL19nZW5lcmFsLmpzIl0sIm5hbWVzIjpbImFuZ3VsYXIiLCJtb2R1bGUiLCJjb250cm9sbGVyIiwiJGxvY2F0aW9uIiwiJHJvb3RTY29wZSIsIiR3aW5kb3ciLCJhdXRoIiwiaXNNb2JpbGUiLCJpbm5lcldpZHRoIiwiZWxlbWVudCIsImJpbmQiLCIkJHBoYXNlIiwiJGFwcGx5IiwiJG9uIiwiYm9keUNsYXNzIiwiJCRwYXRoIiwic3BsaXQiLCJtYXAiLCJ0cmFtbyIsImZpbHRlciIsImlucHV0IiwicGFyc2VGbG9hdCIsInRvRml4ZWQiLCJ3aW5kb3ciLCJlbmNvZGVVUklDb21wb25lbnQiLCJzbGljZSIsImNvbmZpZyIsIiRyb3V0ZVByb3ZpZGVyIiwiJGxvY2F0aW9uUHJvdmlkZXIiLCJoYXNoUHJlZml4Iiwid2hlbiIsInRlbXBsYXRlVXJsIiwicmVzb2x2ZSIsInNlY3VyZUFjY2VzcyIsImlzTG9nZ2VkSW4iLCJsb2NhdGlvbiIsImhyZWYiLCJyZWxvYWQiLCJvdGhlcndpc2UiLCJyZWRpcmVjdFRvIiwiZGlyZWN0aXZlIiwicmVzdHJpY3QiLCJsaW5rIiwic2NvcGUiLCJlbG0iLCJhdHRycyIsIiQiLCJyZWFkeSIsImF0dHIiLCJzb3VyY2UiLCJvbiIsInRhcmdldCIsImFuaW1hdGUiLCJzY3JvbGxMZWZ0Iiwid2lkdGgiLCJwYXJzZUludCIsInRpbWUiLCJzY3JvbGxUb3AiLCJvZmZzZXQiLCJ0b3AiLCJjb2xsYXBzZSIsImUiLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwiJHNjb3BlIiwiJGh0dHAiLCJuZXdzbGV0dGVycyIsImVtYWlsIiwic29saWNpdGFkbyIsImVudmlhciIsInBvc3QiLCJ0aGVuIiwicmVzcG9uc2UiLCJlbnZpb0NvcnJlY3RvIiwiY29uc29sZSIsImxvZyIsImVycm9yIiwiZmFjdG9yeSIsImdldFRva2VuIiwibG9jYWxTdG9yYWdlIiwic2VjdXJlS2V5IiwiaGVhZGVycyIsIkF1dGhvcml6YXRpb24iLCJzYXZlVG9rZW4iLCJ0b2tlbiIsInBheWxvYWQiLCJhdG9iIiwiSlNPTiIsInBhcnNlIiwiZXhwIiwiRGF0ZSIsIm5vdyIsImN1cnJlbnRVc2VyIiwibmFtZSIsImxvZ2luIiwidXNlciIsImRhdGEiLCJlcnIiLCJsb2dvdXQiLCJyZW1vdmVJdGVtIiwicGFzc3dvcmQiLCJmYWlsTG9naW4iLCJzZW5kRm9ybSIsInN0YXR1cyIsInNlbnQiLCJmb3JtY29udGFjdG8iLCJub21icmUiLCJ0ZWxlZm9ubyIsImNvbnN1bHRhIl0sIm1hcHBpbmdzIjoiQUFBQSxhQ0FBQSxRQUNHQyxPQUFPLFdBQ04sVUFDQSxVQUNBLGFBQ0EsZUFFREMsV0FDQyxrQkFBQSxZQUFBLGFBQUEsVUFBQSxPQUNBLFNBQUNDLEVBQVdDLEVBQVlDLEVBQVNDLEdBRS9CRixFQUFXRyxTQUFXRixFQUFRRyxZQUFjLElBRTVDUixRQUFRUyxRQUFRSixHQUFTSyxLQUFLLFNBQVUsV0FDdENOLEVBQVdHLFNBQVdGLEVBQVFHLFlBQWMsSUFDNUNKLEVBQVdPLFNBQVdQLEVBQVdRLFdBR25DUixFQUFXUyxJQUFJLHNCQUF1QixXQUNwQyxJQUFJQyxFQUFZLEdBRUxYLEVBQVVZLE9BQU9DLE1BQU0sS0FFN0JDLElBQUksU0FBQUMsR0FDTyxLQUFWQSxJQUNGSixHQUFBQSxJQUFpQkksS0FJckJkLEVBQVdVLFVBQ0ssS0FBZEEsRUFBQSxPQUEwQkEsRUFBYyxpQkFJ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RixTQUNMN0YsRUFBUThCLFNBQVNDLEtBQU8sS0FDeEIvQixFQUFROEIsU0FBU0UsWUM1QnJCckMsUUFDR0MsT0FBTyxXQUNQQyxXQUFXLG9CQUFxQixjQUNoQ0EsV0FBVyxrQkFBQSxTQUFBLFFBQWtCLFNBQUM4RCxFQUFRQyxHQUNyQ0QsRUFBT3dDLE1BQU8sRUFDZHhDLEVBQU95QyxjQUNMQyxPQUFRLEdBQ1JDLFNBQVUsR0FDVnhDLE1BQU8sR0FDUHlDLFNBQVUsR0FDVnhDLFlBQVksR0FFZEosRUFBT3lDLGFBQWFwQyxPQUFTLFdBQzNCTCxFQUFPd0MsTUFBTyxFQUNkdkMsRUFDR0ssS0FBSyx3QkFDSm9DLE9BQVExQyxFQUFPeUMsYUFBYUMsT0FDNUJDLFNBQVUzQyxFQUFPeUMsYUFBYUUsU0FDOUJ4QyxNQUFPSCxFQUFPeUMsYUFBYXRDLE1BQzNCeUMsU0FBVTVDLEVBQU95QyxhQUFhRyxXQUUvQnJDLEtBQ0MsU0FBQUMsR0FDRVIsRUFBT3dDLE1BQU8sRUFDZHhDLEVBQU95QyxhQUFhckMsWUFBYSxFQUNqQ0osRUFBT3lDLGFBQWFoQyxlQUFnQixHQUV0QyxTQUFBRyxHQUNFWixFQUFPd0MsTUFBTyxFQUNkeEMsRUFBT3lDLGFBQWFyQyxZQUFhLEVBQ2pDSixFQUFPeUMsYUFBYWhDLGVBQWdCLEVBQ3BDQyxRQUFRRSxNQUFNQSIsImZpbGUiOiJzdGF0aWMvc2l0ZS9qcy9hcHAubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmFuZ3VsYXIubW9kdWxlKFwiTWFpbkFwcFwiLCBbXCJuZ1JvdXRlXCIsIFwibmdUb3VjaFwiLCBcIkhvbWVNb2R1bGVcIiwgXCJBdXRoTW9kdWxlXCJdKS5jb250cm9sbGVyKFwibWFpbkNvbnRyb2xsZXJcIiwgZnVuY3Rpb24gKCRsb2NhdGlvbiwgJHJvb3RTY29wZSwgJHdpbmRvdywgYXV0aCkge1xuXG4gICRyb290U2NvcGUuaXNNb2JpbGUgPSAkd2luZG93LmlubmVyV2lkdGggPD0gNzY4O1xuXG4gIGFuZ3VsYXIuZWxlbWVudCgkd2luZG93KS5iaW5kKFwicmVzaXplXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAkcm9vdFNjb3BlLmlzTW9iaWxlID0gJHdpbmRvdy5pbm5lcldpZHRoIDw9IDc2ODtcbiAgICAkcm9vdFNjb3BlLiQkcGhhc2UgfHwgJHJvb3RTY29wZS4kYXBwbHkoKTtcbiAgfSk7XG5cbiAgJHJvb3RTY29wZS4kb24oXCIkcm91dGVDaGFuZ2VTdWNjZXNzXCIsIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgYm9keUNsYXNzID0gXCJcIjtcblxuICAgIHZhciBwYXRoID0gJGxvY2F0aW9uLiQkcGF0aC5zcGxpdChcIi9cIik7XG5cbiAgICBwYXRoLm1hcChmdW5jdGlvbiAodHJhbW8pIHtcbiAgICAgIGlmICh0cmFtbyAhPT0gXCJcIikge1xuICAgICAgICBib2R5Q2xhc3MgKz0gXCItXCIgKyB0cmFtbztcbiAgICAgIH1cbiAgICB9KTtcblxuICAgICRyb290U2NvcGUuYm9keUNsYXNzID0gYm9keUNsYXNzICE9PSBcIlwiID8gXCJwYWdlXCIgKyBib2R5Q2xhc3MgOiBcInBhZ2UtaG9tZVwiO1xuICB9KTtcbn0pLmZpbHRlcihcInByZWNpb1wiLCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoaW5wdXQpIHtcbiAgICBpZiAoaW5wdXQpIHtcbiAgICAgIHJldHVybiBwYXJzZUZsb2F0KGlucHV0KS50b0ZpeGVkKDIpO1xuICAgIH1cbiAgICByZXR1cm4gXCJcIjtcbiAgfTtcbn0pLmZpbHRlcihcImVuY29kZXVybFwiLCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoaW5wdXQpIHtcbiAgICBpZiAoaW5wdXQpIHtcbiAgICAgIHJldHVybiB3aW5kb3cuZW5jb2RlVVJJQ29tcG9uZW50KGlucHV0KTtcbiAgICB9XG4gICAgcmV0dXJuIFwiXCI7XG4gIH07XG59KS5maWx0ZXIoXCJyZW1vdmVUcmFpbGluZ1NsYXNoXCIsIGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChpbnB1dCkge1xuICAgIGlmIChpbnB1dCkge1xuICAgICAgaWYgKGlucHV0WzBdID09PSBcIi9cIikgcmV0dXJuIGlucHV0LnNsaWNlKDEpO2Vsc2UgcmV0dXJuIGlucHV0O1xuICAgIH1cbiAgICByZXR1cm4gXCJcIjtcbiAgfTtcbn0pO1xuXCJ1c2Ugc3RyaWN0XCI7XG5cbmFuZ3VsYXIubW9kdWxlKFwiTWFpbkFwcFwiKS5jb25maWcoZnVuY3Rpb24gKCRyb3V0ZVByb3ZpZGVyLCAkbG9jYXRpb25Qcm92aWRlcikge1xuICAkbG9jYXRpb25Qcm92aWRlci5oYXNoUHJlZml4KFwiXCIpO1xuXG4gICRyb3V0ZVByb3ZpZGVyLndoZW4oXCIvXCIsIHtcbiAgICB0ZW1wbGF0ZVVybDogXCIvdmlld3MvaG9tZS9pbmRleC5odG1sXCIsXG4gICAgY29udHJvbGxlcjogXCJob21lLmluZGV4XCJcbiAgfSkud2hlbihcIi9jYXJyaXRvXCIsIHtcbiAgICB0ZW1wbGF0ZVVybDogXCIvdmlld3MvY2Fycml0by9pbmRleC5odG1sXCIsXG4gICAgY29udHJvbGxlcjogXCJjYXJyaXRvLmluZGV4XCJcbiAgfSkud2hlbihcIi9wcm9kdWN0b3NcIiwge1xuICAgIHRlbXBsYXRlVXJsOiBcIi92aWV3cy9wcm9kdWN0b3MvaW5kZXguaHRtbFwiLFxuICAgIGNvbnRyb2xsZXI6IFwicHJvZHVjdG9zLmluZGV4XCJcbiAgfSkud2hlbihcIi9wcm9kdWN0b3MvOmlkXCIsIHtcbiAgICB0ZW1wbGF0ZVVybDogXCIvdmlld3MvcHJvZHVjdG9zL3Nob3cuaHRtbFwiLFxuICAgIGNvbnRyb2xsZXI6IFwicHJvZHVjdG9zLnNob3dcIlxuICB9KS53aGVuKFwiL2xvZ2luXCIsIHtcbiAgICB0ZW1wbGF0ZVVybDogXCIvdmlld3MvYXV0aC9sb2dpbi5odG1sXCIsXG4gICAgY29udHJvbGxlcjogXCJhdXRoLmxvZ2luXCJcbiAgfSkud2hlbihcIi9sb2dvdXRcIiwge1xuICAgIHRlbXBsYXRlVXJsOiBcInZpZXdzL2hvbWUvaW5kZXguaHRtbFwiLFxuICAgIHJlc29sdmU6IHtcbiAgICAgIHNlY3VyZUFjY2VzczogZnVuY3Rpb24gc2VjdXJlQWNjZXNzKGF1dGgsICR3aW5kb3cpIHtcbiAgICAgICAgaWYgKCFhdXRoLmlzTG9nZ2VkSW4oKSkge1xuICAgICAgICAgICR3aW5kb3cubG9jYXRpb24uaHJlZiA9IFwiIy9cIjtcbiAgICAgICAgICAkd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBjb250cm9sbGVyOiBcImF1dGgubG9nb3V0XCJcbiAgfSkub3RoZXJ3aXNlKHtcbiAgICB0ZW1wbGF0ZVVybDogXCIvdmlld3MvaG9tZS9pbmRleC5odG1sXCIsXG4gICAgcmVkaXJlY3RUbzogXCIvXCJcbiAgfSk7XG59KTtcblwidXNlIHN0cmljdFwiO1xuXG5hbmd1bGFyLm1vZHVsZShcIk1haW5BcHBcIikuZGlyZWN0aXZlKFwibWFpbk1lbnVcIiwgZnVuY3Rpb24gKCkge1xuICByZXR1cm4ge1xuICAgIHJlc3RyaWN0OiBcIkVcIixcbiAgICB0ZW1wbGF0ZVVybDogXCIvdmlld3MvZ2VuZXJhbC9tYWluLW1lbnUuaHRtbFwiLFxuICAgIGNvbnRyb2xsZXI6IFwiZ2VuZXJhbC5tYWluLW1lbnVcIlxuICB9O1xufSkuZGlyZWN0aXZlKFwiZm9vdGVyU2VjdGlvblwiLCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB7XG4gICAgcmVzdHJpY3Q6IFwiRVwiLFxuICAgIHRlbXBsYXRlVXJsOiBcIi92aWV3cy9nZW5lcmFsL2Zvb3Rlci1zZWN0aW9uLmh0bWxcIixcbiAgICBjb250cm9sbGVyOiBcImdlbmVyYWwuZm9vdGVyXCJcbiAgfTtcbn0pLmRpcmVjdGl2ZShcImxvYWRGcmFtZVwiLCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB7XG4gICAgcmVzdHJpY3Q6IFwiQVwiLFxuICAgIGxpbms6IGZ1bmN0aW9uIGxpbmsoc2NvcGUsIGVsbSwgYXR0cnMpIHtcbiAgICAgICQoXCJkb2N1bWVudFwiKS5yZWFkeShmdW5jdGlvbiAoKSB7XG4gICAgICAgICQoZWxtKS5hdHRyKFwic3JjXCIsIGF0dHJzLnNvdXJjZSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59KS5kaXJlY3RpdmUoXCJzY3JvbGxSaWdodFwiLCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB7XG4gICAgcmVzdHJpY3Q6IFwiQVwiLFxuICAgIGxpbms6IGZ1bmN0aW9uIGxpbmsoc2NvcGUsIGVsbSwgYXR0cnMpIHtcbiAgICAgICQoZWxtKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgJChhdHRycy50YXJnZXQpLmFuaW1hdGUoe1xuICAgICAgICAgIHNjcm9sbExlZnQ6IFwiKz1cIiArICQoYXR0cnMudGFyZ2V0KS53aWR0aCgpXG4gICAgICAgIH0sIHBhcnNlSW50KGF0dHJzLnRpbWUpKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbn0pLmRpcmVjdGl2ZShcInNjcm9sbExlZnRcIiwgZnVuY3Rpb24gKCkge1xuICByZXR1cm4ge1xuICAgIHJlc3RyaWN0OiBcIkFcIixcbiAgICBsaW5rOiBmdW5jdGlvbiBsaW5rKHNjb3BlLCBlbG0sIGF0dHJzKSB7XG4gICAgICAkKGVsbSkub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICQoYXR0cnMudGFyZ2V0KS5hbmltYXRlKHtcbiAgICAgICAgICBzY3JvbGxMZWZ0OiBcIi09XCIgKyAkKGF0dHJzLnRhcmdldCkud2lkdGgoKVxuICAgICAgICB9LCBwYXJzZUludChhdHRycy50aW1lKSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59KS5kaXJlY3RpdmUoXCJzY3JvbGxUb0NvbnRhY3RvXCIsIGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHtcbiAgICByZXN0cmljdDogXCJBXCIsXG4gICAgbGluazogZnVuY3Rpb24gbGluayhzY29wZSwgZWxtLCBhdHRycykge1xuICAgICAgJChlbG0pLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICAkKFwiYm9keSwgaHRtbFwiKS5hbmltYXRlKHtcbiAgICAgICAgICBzY3JvbGxUb3A6ICQoXCJmb290ZXItc2VjdGlvblwiKS5vZmZzZXQoKS50b3BcbiAgICAgICAgfSwgNTAwKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbn0pLmRpcmVjdGl2ZShcInNjcm9sbFRvVGFyZ2V0XCIsIGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHtcbiAgICByZXN0cmljdDogXCJBXCIsXG4gICAgbGluazogZnVuY3Rpb24gbGluayhzY29wZSwgZWxtLCBhdHRycykge1xuICAgICAgJChlbG0pLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICAkKFwiYm9keSwgaHRtbFwiKS5hbmltYXRlKHtcbiAgICAgICAgICBzY3JvbGxUb3A6ICQoYXR0cnMudGFyZ2V0KS5vZmZzZXQoKS50b3BcbiAgICAgICAgfSwgNzAwKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbn0pLmRpcmVjdGl2ZShcImVzY29uZGVNZW51XCIsIGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHtcbiAgICByZXN0cmljdDogXCJBXCIsXG4gICAgbGluazogZnVuY3Rpb24gbGluayhzY29wZSwgZWxtLCBhdHRycykge1xuICAgICAgJChlbG0pLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICAkKFwiI25hdmJhclwiKS5jb2xsYXBzZShcImhpZGVcIik7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59KS5kaXJlY3RpdmUoXCJmbG90YW50ZVwiLCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB7XG4gICAgcmVzdHJpY3Q6IFwiQVwiLFxuICAgIGxpbms6IGZ1bmN0aW9uIGxpbmsoc2NvcGUsIGVsbSwgYXR0cnMpIHtcbiAgICAgICQod2luZG93KS5vbihcInNjcm9sbFwiLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICBpZiAoJCh3aW5kb3cpLnNjcm9sbFRvcCgpID4gNTApIHtcbiAgICAgICAgICAvLyBbVEJNXVxuICAgICAgICAgIGlmICgkKHdpbmRvdykud2lkdGgoKSA8PSA5OTIpIHtcbiAgICAgICAgICAgIC8vIFtUQk1dXG4gICAgICAgICAgICAkKGVsbSkuYWRkQ2xhc3MoXCJmbG90YW50ZVwiKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgJChlbG0pLnJlbW92ZUNsYXNzKFwiZmxvdGFudGVcIik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbn0pO1xuXCJ1c2Ugc3RyaWN0XCI7XG5cbmFuZ3VsYXIubW9kdWxlKFwiQXV0aE1vZHVsZVwiLCBbXSk7XG5cInVzZSBzdHJpY3RcIjtcblxuYW5ndWxhci5tb2R1bGUoXCJIb21lTW9kdWxlXCIsIFtdKS5jb250cm9sbGVyKFwiaG9tZS5pbmRleFwiLCBmdW5jdGlvbiAoJHNjb3BlLCAkaHR0cCkge1xuICAkc2NvcGUubmV3c2xldHRlcnMgPSB7XG4gICAgZW1haWw6IFwiXCIsXG4gICAgc29saWNpdGFkbzogZmFsc2VcbiAgfTtcblxuICAkc2NvcGUubmV3c2xldHRlcnMuZW52aWFyID0gZnVuY3Rpb24gKCkge1xuICAgICRodHRwLnBvc3QoXCJhcGkvbWFpbGluZy9uZXdzbGV0dGVyc1wiLCB7XG4gICAgICBlbWFpbDogJHNjb3BlLm5ld3NsZXR0ZXJzLmVtYWlsXG4gICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICRzY29wZS5uZXdzbGV0dGVycy5zb2xpY2l0YWRvID0gdHJ1ZTtcbiAgICAgICRzY29wZS5uZXdzbGV0dGVycy5lbnZpb0NvcnJlY3RvID0gdHJ1ZTtcbiAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcbiAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICRzY29wZS5uZXdzbGV0dGVycy5zb2xpY2l0YWRvID0gdHJ1ZTtcbiAgICAgICRzY29wZS5uZXdzbGV0dGVycy5lbnZpb0NvcnJlY3RvID0gZmFsc2U7XG4gICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICB9KTtcbiAgfTtcbn0pO1xuXCJ1c2Ugc3RyaWN0XCI7XG5cbmFuZ3VsYXIubW9kdWxlKFwiSG9tZU1vZHVsZVwiKS5kaXJlY3RpdmUoXCJuZXdzbGV0dGVyc1wiLCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB7XG4gICAgcmVzdHJpY3Q6IFwiRVwiLFxuICAgIHRlbXBsYXRlVXJsOiBcIi92aWV3cy9ob21lL25ld3NsZXR0ZXJzLmh0bWxcIlxuICB9O1xufSk7XG5cInVzZSBzdHJpY3RcIjtcblxuYW5ndWxhci5tb2R1bGUoXCJNYWluQXBwXCIpLmZhY3RvcnkoXCJhdXRoXCIsIGZ1bmN0aW9uICgkaHR0cCwgJHdpbmRvdykge1xuICB2YXIgX2dldFRva2VuID0gZnVuY3Rpb24gX2dldFRva2VuKCkge1xuICAgIHJldHVybiAkd2luZG93LmxvY2FsU3RvcmFnZVtcImFudC10b2tlblwiXTtcbiAgfTtcblxuICB2YXIgc2VjdXJlS2V5ID0ge1xuICAgIGhlYWRlcnM6IHtcbiAgICAgIEF1dGhvcml6YXRpb246IFwiQmVhcmVyIFwiICsgX2dldFRva2VuKClcbiAgICB9XG4gIH07XG4gIHZhciBfc2F2ZVRva2VuID0gZnVuY3Rpb24gX3NhdmVUb2tlbih0b2tlbikge1xuICAgICR3aW5kb3cubG9jYWxTdG9yYWdlW1wiYW50LXRva2VuXCJdID0gdG9rZW47XG4gIH07XG4gIHJldHVybiB7XG4gICAgc2F2ZVRva2VuOiBmdW5jdGlvbiBzYXZlVG9rZW4odG9rZW4pIHtcbiAgICAgIHJldHVybiBfc2F2ZVRva2VuKHRva2VuKTtcbiAgICB9LFxuICAgIGdldFRva2VuOiBmdW5jdGlvbiBnZXRUb2tlbigpIHtcbiAgICAgIHJldHVybiBfZ2V0VG9rZW4oKTtcbiAgICB9LFxuICAgIHNlY3VyZUtleTogc2VjdXJlS2V5LFxuICAgIGlzTG9nZ2VkSW46IGZ1bmN0aW9uIGlzTG9nZ2VkSW4oKSB7XG4gICAgICB2YXIgdG9rZW4gPSBfZ2V0VG9rZW4oKTtcbiAgICAgIHZhciBwYXlsb2FkID0gdm9pZCAwO1xuXG4gICAgICBpZiAodG9rZW4pIHtcbiAgICAgICAgcGF5bG9hZCA9IHRva2VuLnNwbGl0KFwiLlwiKVsxXTtcbiAgICAgICAgcGF5bG9hZCA9ICR3aW5kb3cuYXRvYihwYXlsb2FkKTtcbiAgICAgICAgcGF5bG9hZCA9IEpTT04ucGFyc2UocGF5bG9hZCk7XG5cbiAgICAgICAgcmV0dXJuIHBheWxvYWQuZXhwID4gRGF0ZS5ub3coKSAvIDEwMDA7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfSxcbiAgICBjdXJyZW50VXNlcjogZnVuY3Rpb24gY3VycmVudFVzZXIoKSB7XG4gICAgICBpZiAoaXNMb2dnZWRJbigpKSB7XG4gICAgICAgIHZhciB0b2tlbiA9IF9nZXRUb2tlbigpO1xuICAgICAgICB2YXIgcGF5bG9hZCA9IHRva2VuLnNwbGl0KFwiLlwiKVsxXTtcbiAgICAgICAgcGF5bG9hZCA9ICR3aW5kb3cuYXRvYihwYXlsb2FkKTtcbiAgICAgICAgcGF5bG9hZCA9IEpTT04ucGFyc2UocGF5bG9hZCk7XG4gICAgICAgIHJldHVybiB7IGVtYWlsOiBwYXlsb2FkLmVtYWlsLCBuYW1lOiBwYXlsb2FkLm5hbWUgfTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGxvZ2luOiBmdW5jdGlvbiBsb2dpbih1c2VyKSB7XG4gICAgICByZXR1cm4gJGh0dHAucG9zdChcIi9hcGkvdXN1YXJpb3MvbG9naW5cIiwgdXNlcikudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgX3NhdmVUb2tlbihyZXNwb25zZS5kYXRhLnRva2VuKTtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgfSwgZnVuY3Rpb24gKGVycikge1xuICAgICAgICByZXR1cm4gZXJyO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBsb2dvdXQ6IGZ1bmN0aW9uIGxvZ291dCgpIHtcbiAgICAgICR3aW5kb3cubG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oXCJhbnQtdG9rZW5cIik7XG4gICAgfVxuICB9O1xufSk7XG5cInVzZSBzdHJpY3RcIjtcblxuYW5ndWxhci5tb2R1bGUoXCJNYWluQXBwXCIpLmZhY3RvcnkoXCJnZXRBcGlEYXRhXCIsIGZ1bmN0aW9uICgkaHR0cCwgJHJvb3RTY29wZSkge1xuICB2YXIgZ2V0dGVyID0gZnVuY3Rpb24gZ2V0dGVyKHVybCkge1xuICAgIHJldHVybiAkaHR0cCh7IG1ldGhvZDogXCJHRVRcIiwgdXJsOiB1cmwgfSk7XG4gIH07XG5cbiAgcmV0dXJuIHt9O1xufSk7XG5cInVzZSBzdHJpY3RcIjtcblxuYW5ndWxhci5tb2R1bGUoXCJNYWluQXBwXCIpLmZhY3RvcnkoXCJzdG9yYWdlXCIsIGZ1bmN0aW9uICgkd2luZG93LCAkcm9vdFNjb3BlKSB7XG4gIHJldHVybiB7fTtcbn0pO1xuXCJ1c2Ugc3RyaWN0XCI7XG5cbmFuZ3VsYXIubW9kdWxlKFwiQXV0aE1vZHVsZVwiKS5jb250cm9sbGVyKFwiYXV0aC5sb2dpblwiLCBmdW5jdGlvbiAoJHNjb3BlLCAkd2luZG93LCBhdXRoKSB7XG4gIGlmICghYXV0aC5pc0xvZ2dlZEluKCkpIHtcbiAgICAkc2NvcGUuZW1haWwgPSBcIlwiO1xuICAgICRzY29wZS5wYXNzd29yZCA9IFwiXCI7XG4gICAgJHNjb3BlLmZhaWxMb2dpbiA9IGZhbHNlO1xuXG4gICAgJHNjb3BlLnNlbmRGb3JtID0gZnVuY3Rpb24gKCkge1xuICAgICAgYXV0aC5sb2dpbih7IGVtYWlsOiAkc2NvcGUuZW1haWwsIHBhc3N3b3JkOiAkc2NvcGUucGFzc3dvcmQgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDAxKSB7XG4gICAgICAgICAgJHNjb3BlLmZhaWxMb2dpbiA9IHRydWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgJHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gXCIjL1wiO1xuICAgICAgICAgICR3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgJHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gXCIjL1wiO1xuICAgICR3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gIH1cbn0pLmNvbnRyb2xsZXIoXCJhdXRoLmxvZ291dFwiLCBmdW5jdGlvbiAoJHNjb3BlLCAkd2luZG93LCBhdXRoKSB7XG4gIGF1dGgubG9nb3V0KCk7XG4gICR3aW5kb3cubG9jYXRpb24uaHJlZiA9IFwiIy9cIjtcbiAgJHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbn0pO1xuXCJ1c2Ugc3RyaWN0XCI7XG5cbmFuZ3VsYXIubW9kdWxlKFwiTWFpbkFwcFwiKS5jb250cm9sbGVyKFwiZ2VuZXJhbC5tYWluLW1lbnVcIiwgZnVuY3Rpb24gKCkge30pLmNvbnRyb2xsZXIoXCJnZW5lcmFsLmZvb3RlclwiLCBmdW5jdGlvbiAoJHNjb3BlLCAkaHR0cCkge1xuICAkc2NvcGUuc2VudCA9IGZhbHNlO1xuICAkc2NvcGUuZm9ybWNvbnRhY3RvID0ge1xuICAgIG5vbWJyZTogXCJcIixcbiAgICB0ZWxlZm9ubzogXCJcIixcbiAgICBlbWFpbDogXCJcIixcbiAgICBjb25zdWx0YTogXCJcIixcbiAgICBzb2xpY2l0YWRvOiBmYWxzZVxuICB9O1xuICAkc2NvcGUuZm9ybWNvbnRhY3RvLmVudmlhciA9IGZ1bmN0aW9uICgpIHtcbiAgICAkc2NvcGUuc2VudCA9IHRydWU7XG4gICAgJGh0dHAucG9zdChcImFwaS9tYWlsaW5nL2NvbnRhY3RvXCIsIHtcbiAgICAgIG5vbWJyZTogJHNjb3BlLmZvcm1jb250YWN0by5ub21icmUsXG4gICAgICB0ZWxlZm9ubzogJHNjb3BlLmZvcm1jb250YWN0by50ZWxlZm9ubyxcbiAgICAgIGVtYWlsOiAkc2NvcGUuZm9ybWNvbnRhY3RvLmVtYWlsLFxuICAgICAgY29uc3VsdGE6ICRzY29wZS5mb3JtY29udGFjdG8uY29uc3VsdGFcbiAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgJHNjb3BlLnNlbnQgPSBmYWxzZTtcbiAgICAgICRzY29wZS5mb3JtY29udGFjdG8uc29saWNpdGFkbyA9IHRydWU7XG4gICAgICAkc2NvcGUuZm9ybWNvbnRhY3RvLmVudmlvQ29ycmVjdG8gPSB0cnVlO1xuICAgIH0sIGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgJHNjb3BlLnNlbnQgPSBmYWxzZTtcbiAgICAgICRzY29wZS5mb3JtY29udGFjdG8uc29saWNpdGFkbyA9IHRydWU7XG4gICAgICAkc2NvcGUuZm9ybWNvbnRhY3RvLmVudmlvQ29ycmVjdG8gPSBmYWxzZTtcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgIH0pO1xuICB9O1xufSk7IiwiYW5ndWxhclxuICAubW9kdWxlKFwiTWFpbkFwcFwiLCBbXG4gICAgXCJuZ1JvdXRlXCIsXG4gICAgXCJuZ1RvdWNoXCIsXG4gICAgXCJIb21lTW9kdWxlXCIsXG4gICAgXCJBdXRoTW9kdWxlXCJcbiAgXSlcbiAgLmNvbnRyb2xsZXIoXG4gICAgXCJtYWluQ29udHJvbGxlclwiLFxuICAgICgkbG9jYXRpb24sICRyb290U2NvcGUsICR3aW5kb3csIGF1dGgpID0+IHtcblxuICAgICAgJHJvb3RTY29wZS5pc01vYmlsZSA9ICR3aW5kb3cuaW5uZXJXaWR0aCA8PSA3Njg7XG5cbiAgICAgIGFuZ3VsYXIuZWxlbWVudCgkd2luZG93KS5iaW5kKFwicmVzaXplXCIsICgpID0+IHtcbiAgICAgICAgJHJvb3RTY29wZS5pc01vYmlsZSA9ICR3aW5kb3cuaW5uZXJXaWR0aCA8PSA3Njg7XG4gICAgICAgICRyb290U2NvcGUuJCRwaGFzZSB8fCAkcm9vdFNjb3BlLiRhcHBseSgpO1xuICAgICAgfSk7XG5cbiAgICAgICRyb290U2NvcGUuJG9uKFwiJHJvdXRlQ2hhbmdlU3VjY2Vzc1wiLCAoKSA9PiB7XG4gICAgICAgIGxldCBib2R5Q2xhc3MgPSBcIlwiO1xuXG4gICAgICAgIGxldCBwYXRoID0gJGxvY2F0aW9uLiQkcGF0aC5zcGxpdChcIi9cIik7XG5cbiAgICAgICAgcGF0aC5tYXAodHJhbW8gPT4ge1xuICAgICAgICAgIGlmICh0cmFtbyAhPT0gXCJcIikge1xuICAgICAgICAgICAgYm9keUNsYXNzICs9IGAtJHt0cmFtb31gO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgJHJvb3RTY29wZS5ib2R5Q2xhc3MgPVxuICAgICAgICAgIGJvZHlDbGFzcyAhPT0gXCJcIiA/IGBwYWdlJHtib2R5Q2xhc3N9YCA6IFwicGFnZS1ob21lXCI7XG4gICAgICB9KTtcbiAgICB9XG4gIClcbiAgLmZpbHRlcihcInByZWNpb1wiLCAoKSA9PiB7XG4gICAgcmV0dXJuIGlucHV0ID0+IHtcbiAgICAgIGlmIChpbnB1dCkge1xuICAgICAgICByZXR1cm4gcGFyc2VGbG9hdChpbnB1dCkudG9GaXhlZCgyKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBcIlwiO1xuICAgIH07XG4gIH0pXG4gIC5maWx0ZXIoXCJlbmNvZGV1cmxcIiwgKCkgPT4ge1xuICAgIHJldHVybiBpbnB1dCA9PiB7XG4gICAgICBpZiAoaW5wdXQpIHtcbiAgICAgICAgcmV0dXJuIHdpbmRvdy5lbmNvZGVVUklDb21wb25lbnQoaW5wdXQpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFwiXCI7XG4gICAgfTtcbiAgfSlcbiAgLmZpbHRlcihcInJlbW92ZVRyYWlsaW5nU2xhc2hcIiwgKCkgPT4ge1xuICAgIHJldHVybiBpbnB1dCA9PiB7XG4gICAgICBpZiAoaW5wdXQpIHtcbiAgICAgICAgaWYgKGlucHV0WzBdID09PSBcIi9cIikgcmV0dXJuIGlucHV0LnNsaWNlKDEpO1xuICAgICAgICBlbHNlIHJldHVybiBpbnB1dDtcbiAgICAgIH1cbiAgICAgIHJldHVybiBcIlwiO1xuICAgIH07XG4gIH0pO1xuIiwiYW5ndWxhci5tb2R1bGUoXCJNYWluQXBwXCIpLmNvbmZpZygoJHJvdXRlUHJvdmlkZXIsICRsb2NhdGlvblByb3ZpZGVyKSA9PiB7XG4gICRsb2NhdGlvblByb3ZpZGVyLmhhc2hQcmVmaXgoXCJcIik7XG5cbiAgJHJvdXRlUHJvdmlkZXJcbiAgICAud2hlbihcIi9cIiwge1xuICAgICAgdGVtcGxhdGVVcmw6IFwiL3ZpZXdzL2hvbWUvaW5kZXguaHRtbFwiLFxuICAgICAgY29udHJvbGxlcjogXCJob21lLmluZGV4XCJcbiAgICB9KVxuICAgIC53aGVuKFwiL2NhcnJpdG9cIiwge1xuICAgICAgdGVtcGxhdGVVcmw6IFwiL3ZpZXdzL2NhcnJpdG8vaW5kZXguaHRtbFwiLFxuICAgICAgY29udHJvbGxlcjogXCJjYXJyaXRvLmluZGV4XCJcbiAgICB9KVxuICAgIC53aGVuKFwiL3Byb2R1Y3Rvc1wiLCB7XG4gICAgICB0ZW1wbGF0ZVVybDogXCIvdmlld3MvcHJvZHVjdG9zL2luZGV4Lmh0bWxcIixcbiAgICAgIGNvbnRyb2xsZXI6IFwicHJvZHVjdG9zLmluZGV4XCJcbiAgICB9KVxuICAgIC53aGVuKFwiL3Byb2R1Y3Rvcy86aWRcIiwge1xuICAgICAgdGVtcGxhdGVVcmw6IFwiL3ZpZXdzL3Byb2R1Y3Rvcy9zaG93Lmh0bWxcIixcbiAgICAgIGNvbnRyb2xsZXI6IFwicHJvZHVjdG9zLnNob3dcIlxuICAgIH0pXG5cbiAgICBcblxuICAgIC53aGVuKFwiL2xvZ2luXCIsIHtcbiAgICAgIHRlbXBsYXRlVXJsOiBcIi92aWV3cy9hdXRoL2xvZ2luLmh0bWxcIixcbiAgICAgIGNvbnRyb2xsZXI6IFwiYXV0aC5sb2dpblwiXG4gICAgfSlcbiAgICAud2hlbihcIi9sb2dvdXRcIiwge1xuICAgICAgdGVtcGxhdGVVcmw6IFwidmlld3MvaG9tZS9pbmRleC5odG1sXCIsXG4gICAgICByZXNvbHZlOiB7XG4gICAgICAgIHNlY3VyZUFjY2VzczogKGF1dGgsICR3aW5kb3cpID0+IHtcbiAgICAgICAgICBpZiAoIWF1dGguaXNMb2dnZWRJbigpKSB7XG4gICAgICAgICAgICAkd2luZG93LmxvY2F0aW9uLmhyZWYgPSBcIiMvXCI7XG4gICAgICAgICAgICAkd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGNvbnRyb2xsZXI6IFwiYXV0aC5sb2dvdXRcIlxuICAgIH0pXG5cbiAgICBcblxuICAgIC5vdGhlcndpc2Uoe1xuICAgICAgdGVtcGxhdGVVcmw6IFwiL3ZpZXdzL2hvbWUvaW5kZXguaHRtbFwiLFxuICAgICAgcmVkaXJlY3RUbzogXCIvXCJcbiAgICB9KTtcbn0pO1xuIiwiYW5ndWxhclxuICAubW9kdWxlKFwiTWFpbkFwcFwiKVxuICAuZGlyZWN0aXZlKFwibWFpbk1lbnVcIiwgKCkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICByZXN0cmljdDogXCJFXCIsXG4gICAgICB0ZW1wbGF0ZVVybDogXCIvdmlld3MvZ2VuZXJhbC9tYWluLW1lbnUuaHRtbFwiLFxuICAgICAgY29udHJvbGxlcjogXCJnZW5lcmFsLm1haW4tbWVudVwiXG4gICAgfTtcbiAgfSlcbiAgLmRpcmVjdGl2ZShcImZvb3RlclNlY3Rpb25cIiwgKCkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICByZXN0cmljdDogXCJFXCIsXG4gICAgICB0ZW1wbGF0ZVVybDogXCIvdmlld3MvZ2VuZXJhbC9mb290ZXItc2VjdGlvbi5odG1sXCIsXG4gICAgICBjb250cm9sbGVyOiBcImdlbmVyYWwuZm9vdGVyXCJcbiAgICB9O1xuICB9KVxuICAuZGlyZWN0aXZlKFwibG9hZEZyYW1lXCIsICgpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgcmVzdHJpY3Q6IFwiQVwiLFxuICAgICAgbGluazogKHNjb3BlLCBlbG0sIGF0dHJzKSA9PiB7XG4gICAgICAgICQoXCJkb2N1bWVudFwiKS5yZWFkeSgoKSA9PiB7XG4gICAgICAgICAgJChlbG0pLmF0dHIoXCJzcmNcIiwgYXR0cnMuc291cmNlKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfTtcbiAgfSlcbiAgLmRpcmVjdGl2ZShcInNjcm9sbFJpZ2h0XCIsICgpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgcmVzdHJpY3Q6IFwiQVwiLFxuICAgICAgbGluazogKHNjb3BlLCBlbG0sIGF0dHJzKSA9PiB7XG4gICAgICAgICQoZWxtKS5vbihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgICAkKGF0dHJzLnRhcmdldCkuYW5pbWF0ZShcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgc2Nyb2xsTGVmdDogXCIrPVwiICsgJChhdHRycy50YXJnZXQpLndpZHRoKClcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwYXJzZUludChhdHRycy50aW1lKVxuICAgICAgICAgICk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH07XG4gIH0pXG4gIC5kaXJlY3RpdmUoXCJzY3JvbGxMZWZ0XCIsICgpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgcmVzdHJpY3Q6IFwiQVwiLFxuICAgICAgbGluazogKHNjb3BlLCBlbG0sIGF0dHJzKSA9PiB7XG4gICAgICAgICQoZWxtKS5vbihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgICAkKGF0dHJzLnRhcmdldCkuYW5pbWF0ZShcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgc2Nyb2xsTGVmdDogXCItPVwiICsgJChhdHRycy50YXJnZXQpLndpZHRoKClcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwYXJzZUludChhdHRycy50aW1lKVxuICAgICAgICAgICk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH07XG4gIH0pXG4gIC5kaXJlY3RpdmUoXCJzY3JvbGxUb0NvbnRhY3RvXCIsICgpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgcmVzdHJpY3Q6IFwiQVwiLFxuICAgICAgbGluazogKHNjb3BlLCBlbG0sIGF0dHJzKSA9PiB7XG4gICAgICAgICQoZWxtKS5vbihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgICAkKFwiYm9keSwgaHRtbFwiKS5hbmltYXRlKFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBzY3JvbGxUb3A6ICQoXCJmb290ZXItc2VjdGlvblwiKS5vZmZzZXQoKS50b3BcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICA1MDBcbiAgICAgICAgICApO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9O1xuICB9KVxuICAuZGlyZWN0aXZlKFwic2Nyb2xsVG9UYXJnZXRcIiwgKCkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICByZXN0cmljdDogXCJBXCIsXG4gICAgICBsaW5rOiAoc2NvcGUsIGVsbSwgYXR0cnMpID0+IHtcbiAgICAgICAgJChlbG0pLm9uKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICAgICQoXCJib2R5LCBodG1sXCIpLmFuaW1hdGUoXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIHNjcm9sbFRvcDogJChhdHRycy50YXJnZXQpLm9mZnNldCgpLnRvcFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIDcwMFxuICAgICAgICAgICk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH07XG4gIH0pXG4gIC5kaXJlY3RpdmUoXCJlc2NvbmRlTWVudVwiLCAoKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJlc3RyaWN0OiBcIkFcIixcbiAgICAgIGxpbms6IChzY29wZSwgZWxtLCBhdHRycykgPT4ge1xuICAgICAgICAkKGVsbSkub24oXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgICAgJChcIiNuYXZiYXJcIikuY29sbGFwc2UoXCJoaWRlXCIpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9O1xuICB9KVxuICAuZGlyZWN0aXZlKFwiZmxvdGFudGVcIiwgKCkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICByZXN0cmljdDogXCJBXCIsXG4gICAgICBsaW5rOiAoc2NvcGUsIGVsbSwgYXR0cnMpID0+IHtcbiAgICAgICAgJCh3aW5kb3cpLm9uKFwic2Nyb2xsXCIsIGUgPT4ge1xuICAgICAgICAgIGlmICgkKHdpbmRvdykuc2Nyb2xsVG9wKCkgPiA1MCkge1xuICAgICAgICAgICAgLy8gW1RCTV1cbiAgICAgICAgICAgIGlmICgkKHdpbmRvdykud2lkdGgoKSA8PSA5OTIpIHtcbiAgICAgICAgICAgICAgLy8gW1RCTV1cbiAgICAgICAgICAgICAgJChlbG0pLmFkZENsYXNzKFwiZmxvdGFudGVcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICQoZWxtKS5yZW1vdmVDbGFzcyhcImZsb3RhbnRlXCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfTtcbiAgfSk7XG4iLCJhbmd1bGFyLm1vZHVsZShcIkF1dGhNb2R1bGVcIiwgW10pO1xuIiwiYW5ndWxhci5tb2R1bGUoXCJIb21lTW9kdWxlXCIsIFtdKS5jb250cm9sbGVyKFwiaG9tZS5pbmRleFwiLCAoJHNjb3BlLCAkaHR0cCkgPT4ge1xuICAkc2NvcGUubmV3c2xldHRlcnMgPSB7XG4gICAgZW1haWw6IFwiXCIsXG4gICAgc29saWNpdGFkbzogZmFsc2VcbiAgfTtcblxuICAkc2NvcGUubmV3c2xldHRlcnMuZW52aWFyID0gKCkgPT4ge1xuICAgICRodHRwXG4gICAgICAucG9zdChcImFwaS9tYWlsaW5nL25ld3NsZXR0ZXJzXCIsIHtcbiAgICAgICAgZW1haWw6ICRzY29wZS5uZXdzbGV0dGVycy5lbWFpbFxuICAgICAgfSlcbiAgICAgIC50aGVuKFxuICAgICAgICByZXNwb25zZSA9PiB7XG4gICAgICAgICAgJHNjb3BlLm5ld3NsZXR0ZXJzLnNvbGljaXRhZG8gPSB0cnVlO1xuICAgICAgICAgICRzY29wZS5uZXdzbGV0dGVycy5lbnZpb0NvcnJlY3RvID0gdHJ1ZTtcbiAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7XG4gICAgICAgIH0sXG4gICAgICAgIGVycm9yID0+IHtcbiAgICAgICAgICAkc2NvcGUubmV3c2xldHRlcnMuc29saWNpdGFkbyA9IHRydWU7XG4gICAgICAgICAgJHNjb3BlLm5ld3NsZXR0ZXJzLmVudmlvQ29ycmVjdG8gPSBmYWxzZTtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICAgICAgfVxuICAgICAgKTtcbiAgfTtcbn0pO1xuIiwiYW5ndWxhci5tb2R1bGUoXCJIb21lTW9kdWxlXCIpLmRpcmVjdGl2ZShcIm5ld3NsZXR0ZXJzXCIsICgpID0+IHtcbiAgcmV0dXJuIHtcbiAgICByZXN0cmljdDogXCJFXCIsXG4gICAgdGVtcGxhdGVVcmw6IFwiL3ZpZXdzL2hvbWUvbmV3c2xldHRlcnMuaHRtbFwiXG4gIH07XG59KTtcbiIsImFuZ3VsYXIubW9kdWxlKFwiTWFpbkFwcFwiKS5mYWN0b3J5KFwiYXV0aFwiLCAoJGh0dHAsICR3aW5kb3cpID0+IHtcbiAgY29uc3QgZ2V0VG9rZW4gPSAoKSA9PiAkd2luZG93LmxvY2FsU3RvcmFnZVtcImFudC10b2tlblwiXTtcblxuICBjb25zdCBzZWN1cmVLZXkgPSB7XG4gICAgaGVhZGVyczoge1xuICAgICAgQXV0aG9yaXphdGlvbjogXCJCZWFyZXIgXCIgKyBnZXRUb2tlbigpXG4gICAgfVxuICB9O1xuICBjb25zdCBzYXZlVG9rZW4gPSB0b2tlbiA9PiB7XG4gICAgJHdpbmRvdy5sb2NhbFN0b3JhZ2VbXCJhbnQtdG9rZW5cIl0gPSB0b2tlbjtcbiAgfTtcbiAgcmV0dXJuIHtcbiAgICBzYXZlVG9rZW46IHRva2VuID0+IHNhdmVUb2tlbih0b2tlbiksXG4gICAgZ2V0VG9rZW46ICgpID0+IGdldFRva2VuKCksXG4gICAgc2VjdXJlS2V5OiBzZWN1cmVLZXksXG4gICAgaXNMb2dnZWRJbjogKCkgPT4ge1xuICAgICAgbGV0IHRva2VuID0gZ2V0VG9rZW4oKTtcbiAgICAgIGxldCBwYXlsb2FkO1xuXG4gICAgICBpZiAodG9rZW4pIHtcbiAgICAgICAgcGF5bG9hZCA9IHRva2VuLnNwbGl0KFwiLlwiKVsxXTtcbiAgICAgICAgcGF5bG9hZCA9ICR3aW5kb3cuYXRvYihwYXlsb2FkKTtcbiAgICAgICAgcGF5bG9hZCA9IEpTT04ucGFyc2UocGF5bG9hZCk7XG5cbiAgICAgICAgcmV0dXJuIHBheWxvYWQuZXhwID4gRGF0ZS5ub3coKSAvIDEwMDA7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfSxcbiAgICBjdXJyZW50VXNlcjogKCkgPT4ge1xuICAgICAgaWYgKGlzTG9nZ2VkSW4oKSkge1xuICAgICAgICBsZXQgdG9rZW4gPSBnZXRUb2tlbigpO1xuICAgICAgICBsZXQgcGF5bG9hZCA9IHRva2VuLnNwbGl0KFwiLlwiKVsxXTtcbiAgICAgICAgcGF5bG9hZCA9ICR3aW5kb3cuYXRvYihwYXlsb2FkKTtcbiAgICAgICAgcGF5bG9hZCA9IEpTT04ucGFyc2UocGF5bG9hZCk7XG4gICAgICAgIHJldHVybiB7IGVtYWlsOiBwYXlsb2FkLmVtYWlsLCBuYW1lOiBwYXlsb2FkLm5hbWUgfTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGxvZ2luOiB1c2VyID0+XG4gICAgICAkaHR0cC5wb3N0KFwiL2FwaS91c3Vhcmlvcy9sb2dpblwiLCB1c2VyKS50aGVuKFxuICAgICAgICByZXNwb25zZSA9PiB7XG4gICAgICAgICAgc2F2ZVRva2VuKHJlc3BvbnNlLmRhdGEudG9rZW4pO1xuICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgfSxcbiAgICAgICAgZXJyID0+IHtcbiAgICAgICAgICByZXR1cm4gZXJyO1xuICAgICAgICB9XG4gICAgICApLFxuICAgIGxvZ291dDogKCkgPT4ge1xuICAgICAgJHdpbmRvdy5sb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShcImFudC10b2tlblwiKTtcbiAgICB9XG4gIH07XG59KTtcbiIsImFuZ3VsYXIubW9kdWxlKFwiTWFpbkFwcFwiKS5mYWN0b3J5KFwiZ2V0QXBpRGF0YVwiLCAoJGh0dHAsICRyb290U2NvcGUpID0+IHtcbiAgY29uc3QgZ2V0dGVyID0gdXJsID0+IHtcbiAgICByZXR1cm4gJGh0dHAoeyBtZXRob2Q6IFwiR0VUXCIsIHVybDogdXJsIH0pO1xuICB9O1xuXG4gIHJldHVybiB7fTtcbn0pO1xuIiwiYW5ndWxhci5tb2R1bGUoXCJNYWluQXBwXCIpLmZhY3RvcnkoXCJzdG9yYWdlXCIsICgkd2luZG93LCAkcm9vdFNjb3BlKSA9PiB7XG4gIHJldHVybiB7fTtcbn0pO1xuIiwiYW5ndWxhclxuICAubW9kdWxlKFwiQXV0aE1vZHVsZVwiKVxuICAuY29udHJvbGxlcihcImF1dGgubG9naW5cIiwgKCRzY29wZSwgJHdpbmRvdywgYXV0aCkgPT4ge1xuICAgIGlmICghYXV0aC5pc0xvZ2dlZEluKCkpIHtcbiAgICAgICRzY29wZS5lbWFpbCA9IFwiXCI7XG4gICAgICAkc2NvcGUucGFzc3dvcmQgPSBcIlwiO1xuICAgICAgJHNjb3BlLmZhaWxMb2dpbiA9IGZhbHNlO1xuXG4gICAgICAkc2NvcGUuc2VuZEZvcm0gPSAoKSA9PiB7XG4gICAgICAgIGF1dGhcbiAgICAgICAgICAubG9naW4oeyBlbWFpbDogJHNjb3BlLmVtYWlsLCBwYXNzd29yZDogJHNjb3BlLnBhc3N3b3JkIH0pXG4gICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDAxKSB7XG4gICAgICAgICAgICAgICRzY29wZS5mYWlsTG9naW4gPSB0cnVlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgJHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gXCIjL1wiO1xuICAgICAgICAgICAgICAkd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgJHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gXCIjL1wiO1xuICAgICAgJHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgICB9XG4gIH0pXG4gIC5jb250cm9sbGVyKFwiYXV0aC5sb2dvdXRcIiwgKCRzY29wZSwgJHdpbmRvdywgYXV0aCkgPT4ge1xuICAgIGF1dGgubG9nb3V0KCk7XG4gICAgJHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gXCIjL1wiO1xuICAgICR3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gIH0pO1xuIiwiYW5ndWxhclxuICAubW9kdWxlKFwiTWFpbkFwcFwiKVxuICAuY29udHJvbGxlcihcImdlbmVyYWwubWFpbi1tZW51XCIsICgpID0+IHt9KVxuICAuY29udHJvbGxlcihcImdlbmVyYWwuZm9vdGVyXCIsICgkc2NvcGUsICRodHRwKSA9PiB7XG4gICAgJHNjb3BlLnNlbnQgPSBmYWxzZTtcbiAgICAkc2NvcGUuZm9ybWNvbnRhY3RvID0ge1xuICAgICAgbm9tYnJlOiBcIlwiLFxuICAgICAgdGVsZWZvbm86IFwiXCIsXG4gICAgICBlbWFpbDogXCJcIixcbiAgICAgIGNvbnN1bHRhOiBcIlwiLFxuICAgICAgc29saWNpdGFkbzogZmFsc2VcbiAgICB9O1xuICAgICRzY29wZS5mb3JtY29udGFjdG8uZW52aWFyID0gKCkgPT4ge1xuICAgICAgJHNjb3BlLnNlbnQgPSB0cnVlO1xuICAgICAgJGh0dHBcbiAgICAgICAgLnBvc3QoXCJhcGkvbWFpbGluZy9jb250YWN0b1wiLCB7XG4gICAgICAgICAgbm9tYnJlOiAkc2NvcGUuZm9ybWNvbnRhY3RvLm5vbWJyZSxcbiAgICAgICAgICB0ZWxlZm9ubzogJHNjb3BlLmZvcm1jb250YWN0by50ZWxlZm9ubyxcbiAgICAgICAgICBlbWFpbDogJHNjb3BlLmZvcm1jb250YWN0by5lbWFpbCxcbiAgICAgICAgICBjb25zdWx0YTogJHNjb3BlLmZvcm1jb250YWN0by5jb25zdWx0YVxuICAgICAgICB9KVxuICAgICAgICAudGhlbihcbiAgICAgICAgICByZXNwb25zZSA9PiB7XG4gICAgICAgICAgICAkc2NvcGUuc2VudCA9IGZhbHNlO1xuICAgICAgICAgICAgJHNjb3BlLmZvcm1jb250YWN0by5zb2xpY2l0YWRvID0gdHJ1ZTtcbiAgICAgICAgICAgICRzY29wZS5mb3JtY29udGFjdG8uZW52aW9Db3JyZWN0byA9IHRydWU7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICAgICAkc2NvcGUuc2VudCA9IGZhbHNlO1xuICAgICAgICAgICAgJHNjb3BlLmZvcm1jb250YWN0by5zb2xpY2l0YWRvID0gdHJ1ZTtcbiAgICAgICAgICAgICRzY29wZS5mb3JtY29udGFjdG8uZW52aW9Db3JyZWN0byA9IGZhbHNlO1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICAgICAgfVxuICAgICAgICApO1xuICAgIH07XG4gIH0pO1xuIl19
